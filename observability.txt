eksctl create cluster --name=observability \
                      --region=us-east-1 \
                      --zones=us-east-1a,us-east-1b \
                      --without-nodegroup

eksctl utils associate-iam-oidc-provider \
    --region us-east-1 \
    --cluster observability \
    --approve

eksctl create nodegroup --cluster=observability \
                        --region=us-east-1 \
                        --name=observability-ng-private \
                        --node-type=t3.medium \
                        --nodes-min=2 \
                        --nodes-max=3 \
                        --node-volume-size=20 \
                        --managed \
                        --asg-access \
                        --external-dns-access \
                        --full-ecr-access \
                        --appmesh-access \
                        --alb-ingress-access \
                        --node-private-networking

# Update ./kube/config file
aws eks update-kubeconfig --name observability

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update

kubectl create ns monitoring

git clone https://github.com/sruhanuddin/observability-zero-to-hero.git

cd observability-zero-to-hero/day-2

helm install monitoring prometheus-community/kube-prometheus-stack \
-n monitoring \
-f ./custom_kube_prometheus_stack.yml

kubectl get all -n monitoring

helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx

helm repo update

helm install ingress-nginx ingress-nginx/ingress-nginx --namespace ingress-nginx --create-namespace

kubectl get svc -n ingress-nginx

nslookup ae877f465eda04a29bff2e465319fd33-349824780.us-east-1.elb.amazonaws.com

% cat /etc/hosts
##
# Host Database
#
# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1	localhost
255.255.255.255	broadcasthost
::1             localhost
34.194.42.156 prometheus.local grafana.local alertmanager.local
34.195.86.184 prometheus.local grafana.local alertmanager.local


% cat monitoring-ingress.yaml 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: prometheus.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: monitoring-kube-prometheus-prometheus
            port:
              number: 9090
  - host: grafana.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: monitoring-grafana
            port:
              number: 80
  - host: alertmanager.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: monitoring-kube-prometheus-alertmanager
            port:
              number: 9093

kubectl apply -f monitoring-ingress.yaml

kubectl get ingress -n monitoring

http://prometheus.local/query

http://grafana.local/login

http://alertmanager.local/#/alerts

kubectl create ns dev

cd ../day-4
grep -R "abhishekf5" --include="*.y*ml" .
find . -type f -name "*.y*ml" -exec sed -i '.bak' 's/abhishekf5/ruhan3399/g' {} +
grep -R "abhishekf5" --include="*.y*ml" .
grep -R "ruhan3399" --include="*.y*ml" .
cd application
sudo docker buildx build --platform linux/amd64 -t ruhan3399/demoservice-a:v --push service-a/
sudo docker buildx build --platform linux/amd64 -t ruhan3399/demoservice-b:v --push service-b/
cd ..
kubectl apply -k kubernetes-manifest/
kubectl get all -n dev
http://ab667fcd40a5f4d53908cc54f089e805-231053255.us-east-1.elb.amazonaws.com/metrics
cd alerts-alertmanager-servicemonitor-manifest/
vi email-secrets.yml
echo "oxga jldl nqgn bgbx" | base64
vi email-secrets.yml
vi alertmangerconfig.yml
cd ..
kubectl apply -k alerts-alertmanager-servicemonitor-manifest/

http://ab667fcd40a5f4d53908cc54f089e805-231053255.us-east-1.elb.amazonaws.com/crash

http://prometheus.local/targets
PromQL => {__name__=~"http.*"}




